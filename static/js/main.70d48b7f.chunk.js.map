{"version":3,"sources":["components/Clock.tsx","names.ts","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","prevProps","name","props","clearInterval","React","Component","names","App","isClockVisible","getRandomName","Math","floor","random","length","hideClock","showClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIL,KAEvB,EAAKM,SAAS,CAAEP,KAAMM,EAAKJ,uBAG3BM,QAAQC,IAAIH,EAAKJ,wBAChB,OAfP,gCAkBE,SAAmBQ,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SArBhF,kCAyBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA3BzB,oBA+BE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KAER,OACE,qCACE,6BAAKA,IACL,oDAAqBP,KAAKL,MAAMC,eArCxC,GAA2Bc,IAAMC,WCVpBC,EAAkB,CAC7B,cAAe,kFAAkB,gBAAiB,kBCI9CC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBP,KAAMK,EAAM,I,EAGdG,cAAgB,WAEd,EAAKZ,SAAS,CAAEI,KAAMK,EAAMI,KAAKC,MAAMD,KAAKE,SAAWN,EAAMO,Y,EAG/DC,UAAY,WACV,EAAKjB,SAAS,CAAEW,gBAAgB,K,EAGlCO,UAAY,WACV,EAAKlB,SAAS,CAAEW,gBAAgB,K,4CAGlC,WACE,MAAiCd,KAAKL,MAA9BmB,EAAR,EAAQA,eAAgBP,EAAxB,EAAwBA,KAExB,OACE,sBAAKe,UAAU,gBAAf,UACGR,GAEC,cAAC,EAAD,CAAOP,KAAMA,IAEf,gCACE,wBACEgB,KAAK,SACLC,QAASxB,KAAKqB,UACdC,UAAU,0BAHZ,wBAOA,wBACEC,KAAK,SACLC,QAASxB,KAAKoB,UACdE,UAAU,0BAHZ,wBAOA,wBACEC,KAAK,SACLD,UAAU,uBACVE,QAASxB,KAAKe,cAHhB,uC,GA3CQL,IAAMC,WAyDTE,IC3DfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.70d48b7f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId:NodeJS.Timer | undefined;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n    // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <>\n        <h1>{name}</h1>\n        <p>{`Current time: ${this.state.time}`}</p>\n      </>\n\n    );\n  }\n}\n","export const names: string[] = [\n  'React clock', 'Реакт годинник', 'React zegarek', 'React regardez',\n];\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { names } from './names';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: names[0],\n  };\n\n  getRandomName = () => {\n    // eslint-disable-next-line max-len\n    this.setState({ name: names[Math.floor(Math.random() * names.length)] });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App container\">\n        {isClockVisible\n        && (\n          <Clock name={name} />\n        )}\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.showClock}\n            className=\"btn btn-outline-success\"\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.hideClock}\n            className=\"btn btn-outline-warning\"\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-info\"\n            onClick={this.getRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}